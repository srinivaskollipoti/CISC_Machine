import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cozyu
 */
public class CISCGUI extends javax.swing.JFrame {

	private final static Logger LOG = Logger.getGlobal();
	
    CISCSimulator simu; 
    ControlUnit cpu;
    Memory memory;
    /**
     * Creates new form CISCGUI2
     */
    public CISCGUI() {
        initComponents();
        simu=new CISCSimulator(this);
        cpu=simu.getCPU();
        memory=simu.getMemory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        labelInstruction = new javax.swing.JLabel();
        textFieldInstruction = new javax.swing.JTextField();
        buttonRun = new javax.swing.JButton();
        buttonIPL = new javax.swing.JButton();
        buttonSingleStep = new javax.swing.JButton();
        labelLogger = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        labelR0 = new javax.swing.JLabel();
        labelR1 = new javax.swing.JLabel();
        labelR2 = new javax.swing.JLabel();
        labelR3 = new javax.swing.JLabel();
        textFieldR0 = new javax.swing.JTextField();
        textFieldR1 = new javax.swing.JTextField();
        textFieldR2 = new javax.swing.JTextField();
        textFieldR3 = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        labelIX1 = new javax.swing.JLabel();
        labelIX2 = new javax.swing.JLabel();
        labelIX3 = new javax.swing.JLabel();
        textFieldIX1 = new javax.swing.JTextField();
        textFieldIX2 = new javax.swing.JTextField();
        textFieldIX3 = new javax.swing.JTextField();
        labelIR = new javax.swing.JLabel();
        textFieldIR = new javax.swing.JTextField();
        labelPC = new javax.swing.JLabel();
        textFieldPC = new javax.swing.JTextField();
        labelMAR = new javax.swing.JLabel();
        labelMBR = new javax.swing.JLabel();
        textFieldMAR = new javax.swing.JTextField();
        textFieldMFR = new javax.swing.JTextField();
        labelCC = new javax.swing.JLabel();
        textFieldCC = new javax.swing.JTextField();
        labelMFR = new javax.swing.JLabel();
        textFieldMBR = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelInstruction.setText("Instruction");

        textFieldInstruction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldInstructionActionPerformed(evt);
            }
        });

        buttonRun.setText("Run");
        buttonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRunActionPerformed(evt);
            }
        });

        buttonIPL.setText("IPL");
        buttonIPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIPLActionPerformed(evt);
            }
        });

        buttonSingleStep.setText("SingleStep");
        buttonSingleStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSingleStepActionPerformed(evt);
            }
        });
        
        labelLogger.setText("Logger");

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        labelR0.setText("R0");

        labelR1.setText("R1");

        labelR2.setText("R2");

        labelR3.setText("R3");

        textFieldR0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldR0ActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        labelIX1.setText("IX1");

        labelIX2.setText("IX2");

        labelIX3.setText("IX3");

        textFieldIX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIX1ActionPerformed(evt);
            }
        });

        labelIR.setText("IR");

        labelPC.setText("PC");

        textFieldPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPCActionPerformed(evt);
            }
        });

        labelMAR.setText("MAR");

        labelMBR.setText("MBR");

        labelCC.setText("CC");

        labelMFR.setText("MFR");
        
        textFieldR0.setText("0");
    	textFieldR1.setText("0");
    	textFieldR2.setText("0");
    	textFieldR3.setText("0");
    	textFieldIX1.setText("0");
    	textFieldIX2.setText("0");
    	textFieldIX3.setText("0");
    	textFieldPC.setText("0");
    	textFieldCC.setText("0");
    	textFieldMAR.setText("0");
    	textFieldMBR.setText("0");
    	textFieldMFR.setText("0");
    	textFieldIR.setText("0");
    	textFieldPC.setText("0");
    	
    	

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelInstruction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldInstruction, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelMFR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldMFR))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textFieldMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelPC)
                                    .addGap(18, 18, 18)
                                    .addComponent(textFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelR0)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(labelR3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelR1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelR2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(textFieldR0)
                                        .addComponent(textFieldR1)
                                        .addComponent(textFieldR2)
                                        .addComponent(textFieldR3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFieldIX2)
                                    .addComponent(textFieldIX3)
                                    .addComponent(textFieldIR)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelMBR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelIR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelCC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldMBR, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(textFieldCC)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelIX1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelIX2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelIX3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldIX1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buttonSave, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(buttonSingleStep, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(buttonIPL, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelLogger, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(textFieldInstruction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelInstruction)
                        .addComponent(buttonSingleStep)
                        .addComponent(buttonRun)
                        .addComponent(buttonIPL)))
                .addGap(11, 11, 11)
                .addComponent(labelLogger)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelR0)
                            .addComponent(textFieldR0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIX1)
                            .addComponent(textFieldIX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelR1)
                            .addComponent(textFieldR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIX2)
                            .addComponent(textFieldIX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelR2)
                            .addComponent(textFieldR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIX3)
                            .addComponent(textFieldIX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelR3)
                            .addComponent(textFieldR3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIR))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPC)
                            .addComponent(textFieldPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCC)
                            .addComponent(textFieldCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMAR)
                            .addComponent(textFieldMAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldMBR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMBR))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSave)
                            .addComponent(textFieldMFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMFR)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void buttonSingleStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSingleStepActionPerformed
    	LOG.info("Simulator perform singlestep");
    	if(simu.isPowerOff()==true) {
    		textArea.append("[GUI] Simulator is not turned on, push the IPL button\n");
    		return;
    	}
    	String instructions=textFieldInstruction.getText();
    	instructions=instructions.trim();
    	if(instructions.length()>0)
    	{
	    	String [] arrInst=instructions.split("\n");
	    	if(simu.setUserCode(arrInst)==false)
	    	{
	    		textArea.append("Input instruction is not valid\n");
	    		return;
	    	}	
	    	textFieldInstruction.setText("");
    	}
    	simu.singleStep();
    	textArea.append(simu.getMessage()+"\n");
    }//GEN-LAST:event_buttonSingleStepActionPerformed

    
    private void buttonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRunActionPerformed
    	LOG.info("Simulator starts to run");
    	if(simu.isPowerOff()==true) {
    		textArea.append("[GUI] Simulator is not turned on, push the IPL button\n");
    		return;
    	}
    	String instructions=textFieldInstruction.getText();
    	instructions=instructions.trim();
    	if(instructions.length()>0)
    	{
	    	String [] arrInst=instructions.split("\n");

	    	if(simu.setUserCode(arrInst)==false)
	    	{
	    		textArea.append("Input instruction is not valid\n");
	    		return;
	    	}else {
	    		textArea.append("Store user instruction into Memory["+memory.getUserMemoryLocation()+"]\n");
	    		textArea.append(instructions+"\n");
	    	}
	    	textFieldInstruction.setText("");
    	}
    	simu.run();
    	textArea.append(simu.getMessage()+"\n");
    }//GEN-LAST:event_buttonRunActionPerformed

    private void textFieldInstructionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldInstructionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldInstructionActionPerformed

    private void buttonIPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIPLActionPerformed
    	if(simu.getState()==CISCSimulator.StateType.POWEROFF)
    	{
    		LOG.info("Simulator is turned on");
	    	boolean resultInit=simu.initProcessor();
	        if(!resultInit) {
	            LOG.severe("Failed to init processor");
	            return;
	        }
    	}else {
    		simu.powerOff();
    		LOG.info("Simulator is turned off");
            
    	}
    }//GEN-LAST:event_buttonIPLActionPerformed

    private void textFieldR0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldR0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldR0ActionPerformed

    private void textFieldIX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldIX1ActionPerformed

    private void textFieldPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPCActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
    	
    	if(simu.isPowerOff()==true) {
    		textArea.append("[GUI] Simulator is not turned on, push the IPL button\n");
    		return;
    	}
    	
    	String message="";
    	try {
    	simu.saveRegister(
    			Long.valueOf(textFieldR0.getText()),
    			Long.valueOf(textFieldR1.getText()),
    			Long.valueOf(textFieldR2.getText()),
    			Long.valueOf(textFieldR3.getText()),
    			Long.valueOf(textFieldIX1.getText()),
    			Long.valueOf(textFieldIX2.getText()),
    			Long.valueOf(textFieldIX3.getText()),
    			Long.valueOf(textFieldIR.getText()),
    			Long.valueOf(textFieldPC.getText()),
    			Long.valueOf(textFieldCC.getText()),
    			Long.valueOf(textFieldMAR.getText()),
    			Long.valueOf(textFieldMBR.getText()),
    			Long.valueOf(textFieldMFR.getText()));
    	}catch(NumberFormatException e)
    	{
    		message="[GUI] Input number is not valid\n";
    	}
    	textArea.append(message+simu.getMessage()+"\n");
    }//GEN-LAST:event_buttonSaveActionPerformed

    public void updateDisplay()
    {
    	textFieldR0.setText(Long.toString(cpu.GPR[0].getLong()));
    	textFieldR1.setText(Long.toString(cpu.GPR[1].getLong()));
    	textFieldR2.setText(Long.toString(cpu.GPR[2].getLong()));
    	textFieldR3.setText(Long.toString(cpu.GPR[3].getLong()));
    	textFieldIX1.setText(Long.toString(cpu.IX[1].getLong()));
    	textFieldIX2.setText(Long.toString(cpu.IX[2].getLong()));
    	textFieldIX3.setText(Long.toString(cpu.IX[3].getLong()));
    	textFieldPC.setText(Long.toString(cpu.PC.getLong()));
    	textFieldCC.setText(Long.toString(cpu.CC.getLong()));
    	textFieldMAR.setText(Long.toString(cpu.MAR.getLong()));
    	textFieldMBR.setText(Long.toString(cpu.MBR.getLong()));
    	textFieldMFR.setText(Long.toString(cpu.MFR.getLong()));
    	textFieldIR.setText(Long.toString(cpu.IR.getLong()));
    	textFieldPC.setText(Long.toString(cpu.PC.getLong()));
    	
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CISCGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CISCGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CISCGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CISCGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

         
                
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CISCGUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonIPL;
    private javax.swing.JButton buttonRun;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSingleStep;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCC;
    private javax.swing.JLabel labelIR;
    private javax.swing.JLabel labelIX1;
    private javax.swing.JLabel labelIX2;
    private javax.swing.JLabel labelIX3;
    private javax.swing.JLabel labelInstruction;
    private javax.swing.JLabel labelLogger;
    private javax.swing.JLabel labelMAR;
    private javax.swing.JLabel labelMBR;
    private javax.swing.JLabel labelMFR;
    private javax.swing.JLabel labelPC;
    private javax.swing.JLabel labelR0;
    private javax.swing.JLabel labelR1;
    private javax.swing.JLabel labelR2;
    private javax.swing.JLabel labelR3;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField textFieldCC;
    private javax.swing.JTextField textFieldIR;
    private javax.swing.JTextField textFieldIX1;
    private javax.swing.JTextField textFieldIX2;
    private javax.swing.JTextField textFieldIX3;
    private javax.swing.JTextField textFieldInstruction;
    private javax.swing.JTextField textFieldMAR;
    private javax.swing.JTextField textFieldMBR;
    private javax.swing.JTextField textFieldMFR;
    private javax.swing.JTextField textFieldPC;
    private javax.swing.JTextField textFieldR0;
    private javax.swing.JTextField textFieldR1;
    private javax.swing.JTextField textFieldR2;
    private javax.swing.JTextField textFieldR3;
    // End of variables declaration//GEN-END:variables
}
